{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\nfunction* postTodo(action) {\n  try {\n    let newTodos = yield axios.post('http://localhost:3001/list/todo/:id', action.payload);\n    console.log(\"post todo resp = \", newTodos);\n    yield put({\n      type: types.POST_TODO_SUCCESS,\n      payload: newTodos\n    });\n  } catch (e) {\n    yield put({\n      type: types.POST_TODO_FAILURE,\n      payload: e.message\n    });\n  }\n}\n\nfunction* todoSaga() {\n  yield takeEvery(types.POST_TODO_REQUEST, postTodo);\n}\n\nexport default todoSaga;","map":{"version":3,"sources":["/home/rana/Documents/todoList/todolist/src/redux/sagas/todoSaga.js"],"names":["call","put","takeEvery","takeLatest","types","axios","postTodo","action","newTodos","post","payload","console","log","type","POST_TODO_SUCCESS","e","POST_TODO_FAILURE","message","todoSaga","POST_TODO_REQUEST"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,EAAiBC,SAAjB,EAA2BC,UAA3B,QAA4C,oBAA5C;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,UAAUC,QAAV,CAAmBC,MAAnB,EAA0B;AACzB,MAAG;AACF,QAAIC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,qCAAX,EAAiDF,MAAM,CAACG,OAAxD,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCJ,QAAhC;AACA,UAAMP,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAET,KAAK,CAACU,iBAAb;AAAgCJ,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAT;AACA,GAJD,CAIC,OAAMO,CAAN,EAAQ;AACR,UAAMd,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAET,KAAK,CAACY,iBAAb;AAAgCN,MAAAA,OAAO,EAAEK,CAAC,CAACE;AAA3C,KAAD,CAAT;AACA;AACD;;AAGD,UAAUC,QAAV,GAAoB;AACnB,QAAMhB,SAAS,CAACE,KAAK,CAACe,iBAAP,EAA0Bb,QAA1B,CAAf;AACA;;AAED,eAAeY,QAAf","sourcesContent":["import {call,put,takeEvery,takeLatest} from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\n\nfunction* postTodo(action){\n\ttry{\n\t\tlet newTodos = yield axios.post('http://localhost:3001/list/todo/:id',action.payload);\n\t\tconsole.log(\"post todo resp = \",newTodos)\n\t\tyield put({type: types.POST_TODO_SUCCESS, payload: newTodos})\n\t}catch(e){\n\t\tyield put({type: types.POST_TODO_FAILURE, payload: e.message})\t\n\t}\n}\n\n\nfunction* todoSaga(){\n\tyield takeEvery(types.POST_TODO_REQUEST, postTodo);\n}\n\nexport default todoSaga;"]},"metadata":{},"sourceType":"module"}