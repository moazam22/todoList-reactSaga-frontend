{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\nfunction getApi() {\n  return axios.get('http://localhost:3001/lists').then(resp => resp).catch(e => e);\n}\n\nfunction* fetchLists(action) {\n  try {\n    const lists = yield call(getApi);\n    console.log(\"resp ======== \", lists.data.data.listData);\n    yield put({\n      type: types.GET_LISTS_SUCCESS,\n      payload: lists.data.data.listData\n    });\n  } catch (e) {\n    yield put({\n      type: types.GET_LISTS_FAILURE,\n      payload: e.message\n    });\n  }\n}\n\nfunction* listSaga() {\n  yield takeLatest(types.GET_LISTS_REQUEST, fetchLists);\n}\n\nexport default listSaga;","map":{"version":3,"sources":["/home/rana/Documents/todoList/todolist/src/redux/sagas/listSaga.js"],"names":["call","put","takeEvery","takeLatest","types","axios","getApi","get","then","resp","catch","e","fetchLists","action","lists","console","log","data","listData","type","GET_LISTS_SUCCESS","payload","GET_LISTS_FAILURE","message","listSaga","GET_LISTS_REQUEST"],"mappings":"AAAA,SAAQA,IAAR,EAAaC,GAAb,EAAiBC,SAAjB,EAA2BC,UAA3B,QAA4C,oBAA5C;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,MAAT,GAAiB;AAChB,SAAOD,KAAK,CAACE,GAAN,CAAU,6BAAV,EACLC,IADK,CACAC,IAAI,IAAGA,IADP,EAELC,KAFK,CAEEC,CAAD,IAAOA,CAFR,CAAP;AAGA;;AAGD,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AAC3B,MAAG;AACF,UAAMC,KAAK,GAAG,MAAMd,IAAI,CAACM,MAAD,CAAxB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC,QAA7C;AACA,UAAMjB,GAAG,CAAC;AAACkB,MAAAA,IAAI,EAAEf,KAAK,CAACgB,iBAAb;AAAgCC,MAAAA,OAAO,EAAEP,KAAK,CAACG,IAAN,CAAWA,IAAX,CAAgBC;AAAzD,KAAD,CAAT;AACA,GAJD,CAIC,OAAMP,CAAN,EAAQ;AACR,UAAMV,GAAG,CAAC;AAACkB,MAAAA,IAAI,EAAEf,KAAK,CAACkB,iBAAb;AAAgCD,MAAAA,OAAO,EAAEV,CAAC,CAACY;AAA3C,KAAD,CAAT;AACA;AACD;;AAGD,UAAUC,QAAV,GAAoB;AACnB,QAAMrB,UAAU,CAACC,KAAK,CAACqB,iBAAP,EAAyBb,UAAzB,CAAhB;AACA;;AAED,eAAeY,QAAf","sourcesContent":["import {call,put,takeEvery,takeLatest} from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\n\nfunction getApi(){\n\treturn axios.get('http://localhost:3001/lists')\n\t\t.then(resp=> resp)\n\t\t.catch((e) => e)\n}\n\n\nfunction* fetchLists(action){\n\ttry{\n\t\tconst lists = yield call(getApi);\n\t\tconsole.log(\"resp ======== \",lists.data.data.listData);\n\t\tyield put({type: types.GET_LISTS_SUCCESS, payload: lists.data.data.listData})\n\t}catch(e){\n\t\tyield put({type: types.GET_LISTS_FAILURE, payload: e.message})\n\t}\n}\n\n\nfunction* listSaga(){\n\tyield takeLatest(types.GET_LISTS_REQUEST,fetchLists);\n}\n\nexport default listSaga;\n"]},"metadata":{},"sourceType":"module"}