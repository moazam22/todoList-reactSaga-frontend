{"ast":null,"code":"import * as type from '../types';\nconst initialState = {\n  lists: []\n};\nexport default function lists(state = initialState, action) {\n  console.log(\"action = \", action);\n\n  switch (action.type) {\n    case type.GET_LISTS_SUCCESS:\n      return { ...state,\n        lists: action.payload\n      };\n\n    case type.POST_LIST_SUCCESS:\n      return { ...state,\n        lists: action.payload\n      };\n\n    case type.PUT_LIST_SUCCESS:\n      return { ...state,\n        lists: action.payload.data\n      };\n\n    case type.DELETE_LIST_SUCCESS:\n      return { ...state,\n        lists: action.payload\n      };\n\n    case type.POST_TODO_SUCCESS:\n      let newList = state.lists.filter(list => list._id !== action.payload.data._id);\n      return { ...state,\n        lists: [...newList, action.payload.data]\n      };\n\n    case type.PUT_TODO_SUCCESS:\n      const updatedList = state.lists.filter(list => list._id !== action.payload._id);\n      console.log(\"NewList === \", [...updatedList, action.payload]);\n      return { ...state,\n        lists: [...updatedList, action.payload]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/rana/Documents/todoList/todolist/src/redux/reducers/lists.js"],"names":["type","initialState","lists","state","action","console","log","GET_LISTS_SUCCESS","payload","POST_LIST_SUCCESS","PUT_LIST_SUCCESS","data","DELETE_LIST_SUCCESS","POST_TODO_SUCCESS","newList","filter","list","_id","PUT_TODO_SUCCESS","updatedList"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,UAAtB;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAKA,eAAe,SAASA,KAAT,CAAeC,KAAK,GAAGF,YAAvB,EAAqCG,MAArC,EAA4C;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;;AACA,UAAQA,MAAM,CAACJ,IAAf;AACC,SAAKA,IAAI,CAACO,iBAAV;AACC,aAAM,EACL,GAAGJ,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAFT,OAAN;;AAID,SAAKR,IAAI,CAACS,iBAAV;AACC,aAAM,EACL,GAAGN,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAFT,OAAN;;AAID,SAAKR,IAAI,CAACU,gBAAV;AACC,aAAM,EACL,GAAGP,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACI,OAAP,CAAeG;AAFjB,OAAN;;AAID,SAAKX,IAAI,CAACY,mBAAV;AACA,aAAM,EACL,GAAGT,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACI;AAFT,OAAN;;AAIA,SAAKR,IAAI,CAACa,iBAAV;AACC,UAAIC,OAAO,GAAGX,KAAK,CAACD,KAAN,CAAYa,MAAZ,CAAmBC,IAAI,IAAGA,IAAI,CAACC,GAAL,KAAab,MAAM,CAACI,OAAP,CAAeG,IAAf,CAAoBM,GAA3D,CAAd;AACA,aAAM,EACL,GAAGd,KADE;AAELD,QAAAA,KAAK,EAAE,CAAC,GAAGY,OAAJ,EAAaV,MAAM,CAACI,OAAP,CAAeG,IAA5B;AAFF,OAAN;;AAID,SAAKX,IAAI,CAACkB,gBAAV;AACC,YAAMC,WAAW,GAAGhB,KAAK,CAACD,KAAN,CAAYa,MAAZ,CAAmBC,IAAI,IAAGA,IAAI,CAACC,GAAL,KAAab,MAAM,CAACI,OAAP,CAAeS,GAAtD,CAApB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,CAAC,GAAGa,WAAJ,EAAgBf,MAAM,CAACI,OAAvB,CAA3B;AACA,aAAM,EACL,GAAGL,KADE;AAELD,QAAAA,KAAK,EAAE,CAAC,GAAGiB,WAAJ,EAAiBf,MAAM,CAACI,OAAxB;AAFF,OAAN;;AAID;AACC,aAAOL,KAAP;AAnCF;AAqCA","sourcesContent":["import * as type from '../types';\n\n\nconst initialState = {\n\tlists: [],\n}\n\n\nexport default function lists(state = initialState, action){\n\tconsole.log(\"action = \", action);\n\tswitch (action.type){\n\t\tcase type.GET_LISTS_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload\n\t\t\t}\n\t\tcase type.POST_LIST_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload,\n\t\t\t}\n\t\tcase type.PUT_LIST_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload.data,\n\t\t\t}\n\t\tcase type.DELETE_LIST_SUCCESS:\n\t\treturn{\n\t\t\t...state,\n\t\t\tlists: action.payload\n\t\t}\n\t\tcase type.POST_TODO_SUCCESS:\n\t\t\tlet newList = state.lists.filter(list=> list._id !== action.payload.data._id);\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: [...newList, action.payload.data ]\n\t\t\t}\n\t\tcase type.PUT_TODO_SUCCESS:\n\t\t\tconst updatedList = state.lists.filter(list=> list._id !== action.payload._id);\n\t\t\tconsole.log(\"NewList === \",[...updatedList,action.payload]);\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: [...updatedList, action.payload]\n\t\t\t}\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}