{"ast":null,"code":"var _jsxFileName = \"/home/rana/Documents/todoList/todolist/src/TodoList/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Table, TableBody, TableCell, tableCellClasses, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport Todos from './Todos';\nimport { styled } from '@mui/material/styles';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getLists, postList, editList, deleteList } from '../redux/actions/lists';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n\nfunction TodoList() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState('');\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const lists = state.lists.lists;\n  useEffect(() => {\n    dispatch(getLists());\n  }, []);\n\n  const onAdd = async () => {\n    if (!isEdit) {\n      dispatch(postList({\n        name: input,\n        todo: []\n      }));\n      setInput('');\n    } else {\n      dispatch(editList(isEdit, {\n        name: input,\n        todo: []\n      }));\n      setIsEdit(false);\n      setInput('');\n    }\n  };\n\n  const onEdit = (e, id) => {\n    e.stopPropagation();\n    let list = lists.filter(list => list._id === id)[0];\n    setInput(list.name);\n    setIsEdit(id);\n  };\n\n  const onDelete = async (e, id) => {\n    e.stopPropagation();\n\n    try {\n      dispatch(deleteList(id));\n    } catch (e) {\n      console.log(\"Error: \", e);\n    }\n  };\n\n  function createData(id, Name) {\n    const editButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => onEdit(e, id),\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 22\n    }, this);\n\n    const deleteButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: e => onDelete(e, id),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        style: {\n          'color': 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this);\n\n    return {\n      Name,\n      editButton,\n      deleteButton,\n      id\n    };\n  }\n\n  const rows = !!lists && lists.length && lists.map(tableData => createData(tableData._id, tableData.name));\n\n  const showTodos = id => {\n    console.log(\"id\", id);\n    setSelectedTodo(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'display': 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'display': 'flex',\n          'flexDirection': 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'display': 'inline',\n            'padding': '1em'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              'marginRight': '1em',\n              'boxShadow': '0 1px 6px rgba(32,33,36,.28)'\n            },\n            id: \"outlined-basic\",\n            label: \"Enter Name of list\",\n            value: input,\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: event => setInput(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {},\n            variant: \"contained\",\n            onClick: onAdd,\n            children: !isEdit ? 'Add' : 'Update'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'padding': '1em'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              maxWidth: '25em',\n              'boxShadow': '0 1px 15px rgba(32,33,36,.28)'\n            },\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"customized table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: !!rows && rows.length && rows.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                  style: {\n                    'cursor': 'pointer'\n                  },\n                  onClick: () => showTodos(row.id),\n                  children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: row.editButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                    align: \"right\",\n                    children: row.deleteButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 9\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), !!selectedTodo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'flex': '1',\n          'display': 'flex',\n          'flexDirection': 'column'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'display': 'inline',\n            'padding': '1em'\n          },\n          children: /*#__PURE__*/_jsxDEV(Todos, {\n            list: lists.filter(list => list._id === selectedTodo)[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"ILebGAsQ23puwNiz0qnGnZzKtsk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/rana/Documents/todoList/todolist/src/TodoList/TodoList.js"],"names":["useState","useEffect","TextField","Button","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Todos","styled","DeleteIcon","EditIcon","useSelector","useDispatch","getLists","postList","editList","deleteList","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","action","hover","border","TodoList","input","setInput","isEdit","setIsEdit","selectedTodo","setSelectedTodo","dispatch","state","lists","onAdd","name","todo","onEdit","e","id","stopPropagation","list","filter","_id","onDelete","console","log","createData","Name","editButton","deleteButton","rows","length","map","tableData","showTodos","event","target","value","maxWidth","row"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport {\n\tTextField,\n\tButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\ttableCellClasses,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tPaper\n} from '@mui/material';\nimport Todos from './Todos';\nimport { styled } from '@mui/material/styles';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getLists, postList, editList, deleteList} from '../redux/actions/lists';\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\n\n\n\nfunction TodoList(){\n\n\tconst [input, setInput] = useState('');\n\tconst [isEdit, setIsEdit] = useState(false);\n\tconst [selectedTodo, setSelectedTodo] = useState('');\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state)=>state);\n\tconst lists = state.lists.lists;\n\n\n\t\n\tuseEffect(()=>{\n\t\tdispatch(getLists());\n\t},[]);\n\n\tconst onAdd = async()=>{\n\t\tif(!isEdit){\n\t\t\tdispatch(postList({\n\t\t\t\tname: input,\n\t\t\t\ttodo: []\n\t\t\t}));\n\t\t\tsetInput('');\n\t\t}else{\n\t\t\tdispatch(editList(isEdit,{\n\t\t\t\tname: input,\n\t\t\t\ttodo: []\n\t\t\t}))\n\t\t\tsetIsEdit(false);\n\t\t\tsetInput('');\n\t\t}\n\t}\n\n\tconst onEdit = (e,id)=>{\n\t\te.stopPropagation();\n\t\tlet list = lists.filter(list=> list._id === id)[0];\n\t\tsetInput(list.name);\n\t\tsetIsEdit(id);\n\t}\n\n\tconst onDelete = async (e,id)=>{\n\t\te.stopPropagation();\n\t\ttry{\n\t\t\tdispatch(deleteList(id))\n\t\t}catch(e){\n\t\t\tconsole.log(\"Error: \", e);\n\t\t}\n\t}\n\n\t\n\tfunction createData(id,Name) {\n\t\tconst editButton = <Button onClick={(e)=>onEdit(e,id)}><EditIcon/></Button>\n\t\tconst deleteButton = <Button onClick={(e)=>onDelete(e,id)}><DeleteIcon style={{'color': 'red'}}/></Button>\n\t  \treturn { Name, editButton, deleteButton, id };\n\t}\n\n\tconst rows = (!!lists && lists.length) && lists.map(tableData => createData(tableData._id, tableData.name));\n\n\tconst showTodos = (id,)=>{\n\t\tconsole.log(\"id\", id);\n\t\tsetSelectedTodo(id);\n\t}\n\t\n\n\treturn(\n\t\t<>\n\t\t\t<center><h1>Todo List</h1></center>\n\t\t\t<div style={{'display': 'flex'}}>\n\t\t\t\t<div style={{'display': 'flex', 'flexDirection': 'column'}}>\n\t\t\t\t\t<div style={{'display': 'inline','padding': '1em'}} >\n\t\t\t\t\t  <TextField \n\t\t\t\t\t  \tstyle= {{ 'marginRight': '1em', 'boxShadow': '0 1px 6px rgba(32,33,36,.28)' }}\n\t\t\t\t\t  \tid=\"outlined-basic\" \n\t\t\t\t\t  \tlabel=\"Enter Name of list\"\n\t\t\t\t\t  \tvalue = {input} \n\t\t\t\t\t  \tvariant=\"outlined\"\n\t\t\t\t\t  \tsize=\"small\"\n\t\t\t\t\t  \tonChange = {(event)=>setInput(event.target.value)}\n\t\t\t\t\t  \t/>\n\t\t\t\t\t  <Button style= {{ }} variant=\"contained\" onClick={onAdd}>{(!isEdit) ? 'Add' : 'Update'}</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{'padding': '1em'}}>\n\t\t\t\t\t\t<TableContainer sx={{ maxWidth: '25em','boxShadow': '0 1px 15px rgba(32,33,36,.28)'}} component={Paper}>\n\t\t\t\t\t\t<Table  aria-label=\"customized table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t  <TableRow >\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Name</StyledTableCell>\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Edit</StyledTableCell>\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Delete</StyledTableCell>\n\t\t\t\t\t\t  </TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t  {(!!rows && rows.length) && rows.map((row) => (\n\t\t\t\t\t\t    <StyledTableRow style={{'cursor': 'pointer'}} key={row.id} onClick={()=>showTodos(row.id)}>\n\t\t\t\t\t\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{row.Name}\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.editButton}</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.deleteButton}</StyledTableCell>\n\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t  ))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\t(!!selectedTodo) &&\n\t\t\t\t\t<div style={{'flex':'1', 'display': 'flex', 'flexDirection': 'column'}}>\n\t\t\t\t\t\t<div style={{'display': 'inline','padding': '1em'}} >\n\t\t\t\t\t\t\t<Todos list = { lists.filter(list=> list._id === selectedTodo)[0] }/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}