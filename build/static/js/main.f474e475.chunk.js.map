{"version":3,"sources":["redux/types.js","TodoList/Todos.js","redux/actions/todo.js","redux/actions/lists.js","TodoList/TodoList.js","App.js","reportWebVitals.js","redux/reducers/lists.js","redux/reducers/index.js","redux/sagas/listSaga.js","redux/sagas/todoSaga.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["GET_LISTS_REQUEST","GET_LISTS_SUCCESS","POST_LIST_REQUEST","POST_LIST_SUCCESS","PUT_LIST_REQUEST","PUT_LIST_SUCCESS","DELETE_LIST_REQUEST","DELETE_LIST_SUCCESS","POST_TODO_REQUEST","POST_TODO_SUCCESS","PUT_TODO_REQUEST","PUT_TODO_SUCCESS","DELETE_TODO_REQUEST","DELETE_TODO_SUCCESS","CHANGE_STATUS_REQUEST","CHANGE_STATUS_SUCCESS","moment","require","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","Todos","props","lists","useSelector","state","useState","title","setTitle","date","setDate","isEdit","setIsEdit","marked","setMarked","list","selectedList","filter","_id","dispatch","useDispatch","onDelete","e","id","listId","type","types","payload","onStatusChange","console","log","changeStatus","createData","dueDate","format","editButton","Button","onClick","selectetdTodo","todos","length","todo","onEdit","deleteButton","style","mark","rows","map","tableData","TextField","label","value","variant","size","onChange","event","target","default","onDateChange","data","editTodo","TableContainer","sx","maxWidth","component","Paper","Table","TableHead","align","TableBody","row","scope","editList","deleteList","TodoList","input","setInput","selectedTodo","setSelectedTodo","useEffect","onAdd","a","name","stopPropagation","Name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","newList","index","i","tempList","listToUpdate","tempIndex","indexOf","temp","oldList","fetchLists","postApi","listSaga","getApi","axios","get","resp","catch","call","put","listData","message","post","delete","takeLatest","takeEvery","postTodo","deleteTodo","todoSaga","newTodos","newTodo","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","compose","applyMiddleware","createStore","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f474e475.chunk.js","sourcesContent":["export const GET_LISTS_REQUEST = 'GET_LISTS_REQUEST';\nexport const GET_LISTS_SUCCESS = 'GET_LISTS_SUCCESS';\nexport const GET_LISTS_FAILURE = 'GET_LISTS_FAILURE';\n\nexport const POST_LIST_REQUEST = 'POST_LIST_REQUEST';\nexport const POST_LIST_SUCCESS = 'POST_LIST_SUCCESS';\nexport const POST_LIST_FAILURE = 'POST_LIST_FAILURE';\n\nexport const PUT_LIST_REQUEST = 'PUT_LIST_REQUEST';\nexport const PUT_LIST_SUCCESS = 'PUT_LIST_SUCCESS';\nexport const PUT_LIST_FAILURE = 'PUT_LIST_FAILURE';\n\nexport const DELETE_LIST_REQUEST = 'DELETE_LIST_REQUEST';\nexport const DELETE_LIST_SUCCESS = 'DELETE_LIST_SUCCESS';\nexport const DELETE_LIST_FAILURE = 'DELETE_LIST_FAILURE';\n\nexport const POST_TODO_REQUEST = 'POST_TODO_REQUEST';\nexport const POST_TODO_SUCCESS = 'POST_TODO_SUCCESS';\nexport const POST_TODO_FAILURE = 'POST_TODO_FAILURE';\n\nexport const PUT_TODO_REQUEST = 'PUT_TODO_REQUEST';\nexport const PUT_TODO_SUCCESS = 'PUT_TODO_SUCCESS';\nexport const PUT_TODO_FAILURE = 'PUT_TODO_FAILURE';\n\nexport const DELETE_TODO_REQUEST = 'DELETE_TODO_REQUEST';\nexport const DELETE_TODO_SUCCESS = 'DELETE_TODO_SUCCESS';\nexport const DELETE_TODO_FAILURE = 'DELETE_TODO_FAILURE';\n\n\nexport const CHANGE_STATUS_REQUEST = 'CHANGE_STATUS_REQUEST'; \nexport const CHANGE_STATUS_SUCCESS = 'CHANGE_STATUS_SUCCESS';\nexport const CHANGE_STATUS_FAILURE = 'CHANGE_STATUS_FAILURE';","import {useState} from 'react';\nimport {\n\tTextField,\n\tButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\ttableCellClasses,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tPaper\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {useSelector, useDispatch} from 'react-redux';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport {postTodo, editTodo, deleteTodo,changeStatus} from '../redux/actions/todo';\n\nconst moment = require('moment');\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\n\n\nfunction Todos(props){\n\n\tconst lists = useSelector((state)=>state.lists.lists);\n\tconst [title, setTitle] = useState('');\n\tconst [date, setDate] = useState(false);\n\tconst [isEdit, setIsEdit] = useState(false);\n\tconst [marked, setMarked] = useState(false);\n\n\n\tconst {list} = props;\n\tlet selectedList = !!list ? lists.filter(list => list._id === props.list._id)[0] : null;\n\n\tconst dispatch = useDispatch();\n\n\n\tconst onDelete = (e,id)=>{\n\t\tdispatch(deleteTodo(list._id,{\n\t\t\tid: id\n\t\t}));\n\t}\n\n\tconst onEdit = (e,id,dueDate,marked) =>{\n\t\tlet selectetdTodo = !!list.todos && !!list.todos.length ? list.todos.filter(todo=> todo._id === id)[0] : null; \n\t\tsetTitle(!!selectetdTodo ? selectetdTodo.title: '');\n\t\tsetIsEdit(id);\n\t\tsetDate(dueDate);\n\t\tsetMarked(marked);\n\t}\n\n\tconst onStatusChange = (e,id)=>{\n\t\tconsole.log(list._id,id);\n\t\tdispatch(changeStatus(list._id,id));\n\t}\n\n\tfunction createData(id,dueDate,title,marked) {\n\t\tlet date = moment(dueDate).format('MM-DD-YYYY');\n\t\tconst editButton = <Button onClick={(e)=>onEdit(e,id,dueDate,marked)}><EditIcon/></Button>\n\t\tconst deleteButton = <Button onClick={(e)=>onDelete(e,id)}><DeleteIcon style={{'color': 'red'}}/></Button>\n\t  \tconst mark = <Button onClick={(e)=>onStatusChange(e,id)}>{!marked ? <ClearIcon/> : <CheckIcon />}</Button>\n\t  \treturn { title, date, id, editButton, deleteButton, mark };\n\t}\n\tconst rows = (!!selectedList && !!selectedList.todos.length) && selectedList.todos.map(tableData => createData(tableData._id, tableData.dueDate, tableData.title,tableData.marked));\n\t\n\n\tconst onTodoAdd = () => {\n\t\tif(!isEdit){\n\t\t\t(!!title) && dispatch(postTodo(list._id,{\n\t\t\t\ttitle: title,\n\t\t\t\tdueDate: !!date ? date : false,\n\t\t\t\tmarked: 'false'\n\t\t\t}));\n\t\t\tsetTitle('');\n\t\t\tsetDate(false);\n\t\t}else{\n\t\t\t(!!title) && dispatch(editTodo(selectedList._id,{\n\t\t\t\tid: isEdit,\n\t\t\t\ttitle: title,\n\t\t\t\tdueDate: date,\n\t\t\t\tmarked: marked\n\t\t\t}))\n\t\t\tsetIsEdit(false);\n\t\t\tsetTitle('');\n\t\t}\n\t}\n\tconst onDateChange = (e)=>{\n\t\tsetDate(e.target.value);\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<div style={{'padding': '0em'}}>\n\t\t\t\t<TextField \n\t\t\t\t\tstyle= {{ 'marginRight': '1em', 'boxShadow': '0 1px 6px rgba(32,33,36,.28)' }}\n\t\t\t\t\tid=\"outlined-basic\" \n\t\t\t\t\tlabel=\"Enter Name of todo\"\n\t\t\t\t\tvalue = {title} \n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonChange = {(event)=>setTitle(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t{!isEdit && <input default='mm/dd/yyyy' style={{'padding': '0.5em', 'marginRight': '1em'}} onChange={(e)=>onDateChange(e)} type=\"date\"/>}\n\t\t\t\t<Button style={{'paddingLeft':'1em'}} variant=\"contained\" onClick={onTodoAdd}>{!isEdit ? 'Add Todo' : 'Update Todo'}</Button>\n\t\t\t</div><br/>\n\t\t\t<div style={{'paddingTop': '1em'}}>\n\t\t\t{(!!rows && rows.length) &&\n\t\t\t\t<TableContainer sx={{ maxWidth: '75%','boxShadow': '0 1px 15px rgba(32,33,36,.28)'}} component={Paper}>\n\t\t\t\t<Table  aria-label=\"customized table\">\n\t\t\t\t<TableHead>\n\t\t\t\t  <TableRow >\n\t\t\t\t    <StyledTableCell align=\"right\">Marked</StyledTableCell>\n\t\t\t\t    <StyledTableCell align=\"right\">Title</StyledTableCell>\n\t\t\t\t    <StyledTableCell align=\"right\">Due Date</StyledTableCell>\t\t\t\t    \n\t\t\t\t    <StyledTableCell align=\"right\">Edit</StyledTableCell>\n\t\t\t\t    <StyledTableCell align=\"right\">Delete</StyledTableCell>\n\t\t\t\t  </TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t{\n\t\t\t\t  \t(!!rows && rows.length) && rows.map((row) => (\n\t\t\t\t    <StyledTableRow key={row.id}>\n\t\t\t\t    \t<StyledTableCell align=\"right\">{row.mark}</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t{row.title}\n\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.date}</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.editButton}</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.deleteButton}</StyledTableCell>\n\t\t\t\t\t</StyledTableRow>\n\t\t\t\t  ))\n\t\t\t\t}\n\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t}\n\t\t\t</div>\n\t\t</>\t\n\t)\n}\n\nexport default Todos;","import * as types from '../types';\n\n\nexport function postTodo(id,data){\n\treturn {\n\t\ttype: types.POST_TODO_REQUEST,\n\t\tpayload: {id,data}\n\t}\n}\n\nexport function editTodo(id,data){\n\treturn {\n\t\ttype: types.PUT_TODO_REQUEST,\n\t\tpayload: {id,data}\n\t}\n}\n\nexport function deleteTodo(listId, data){\n\treturn {\n\t\ttype: types.DELETE_TODO_REQUEST,\n\t\tpayload: {\n\t\t\tlistId: listId,\n\t\t\tid: data.id\n\t\t}\n\t}\n}\n\nexport function changeStatus(listId,id){\n\treturn {\n\t\ttype: types.CHANGE_STATUS_REQUEST,\n\t\tpayload: {listId,id}\n\t}\n}","import * as types from '../types';\n\n\nexport function getLists(){\n\treturn {\n\t\ttype: types.GET_LISTS_REQUEST,\n\t\tpayload: null\n\t}\n}\n\nexport function postList(data){\n\treturn {\n\t\ttype: types.POST_LIST_REQUEST,\n\t\tpayload: data\n\t}\n}\n\nexport function editList(id,data){\n\treturn{\n\t\ttype: types.PUT_LIST_REQUEST,\n\t\tpayload: {id,data}\n\t}\n}\n\nexport function deleteList(id){\n\treturn{\n\t\ttype: types.DELETE_LIST_REQUEST,\n\t\tpayload: id\n\t}\n}\n","import {useState, useEffect} from 'react';\nimport {\n\tTextField,\n\tButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\ttableCellClasses,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tPaper\n} from '@mui/material';\nimport Todos from './Todos';\nimport { styled } from '@mui/material/styles';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getLists, postList, editList, deleteList} from '../redux/actions/lists';\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\n\n\n\nfunction TodoList(){\n\n\tconst [input, setInput] = useState('');\n\tconst [isEdit, setIsEdit] = useState(false);\n\tconst [selectedTodo, setSelectedTodo] = useState('');\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state)=>state);\n\tconst lists = state.lists.lists;\n\n\n\t\n\tuseEffect(()=>{\n\t\tdispatch(getLists());\n\t},[]);\n\n\tconst onAdd = async()=>{\n\t\tif(!isEdit){\n\t\t\tdispatch(postList({\n\t\t\t\tname: input,\n\t\t\t\ttodo: []\n\t\t\t}));\n\t\t\tsetInput('');\n\t\t}else{\n\t\t\tdispatch(editList(isEdit,{\n\t\t\t\tname: input,\n\t\t\t\ttodo: []\n\t\t\t}))\n\t\t\tsetIsEdit(false);\n\t\t\tsetInput('');\n\t\t}\n\t}\n\n\tconst onEdit = (e,id)=>{\n\t\te.stopPropagation();\n\t\tlet list = lists.filter(list=> list._id === id)[0];\n\t\tsetInput(list.name);\n\t\tsetIsEdit(id);\n\t}\n\n\tconst onDelete = async (e,id)=>{\n\t\te.stopPropagation();\n\t\ttry{\n\t\t\tdispatch(deleteList(id))\n\t\t}catch(e){\n\t\t\tconsole.log(\"Error: \", e);\n\t\t}\n\t}\n\n\t\n\tfunction createData(id,Name) {\n\t\tconst editButton = <Button onClick={(e)=>onEdit(e,id)}><EditIcon/></Button>\n\t\tconst deleteButton = <Button onClick={(e)=>onDelete(e,id)}><DeleteIcon style={{'color': 'red'}}/></Button>\n\t  \treturn { Name, editButton, deleteButton, id };\n\t}\n\n\tconst rows = (!!lists && lists.length) && lists.map(tableData => createData(tableData._id, tableData.name));\n\n\tconst showTodos = (id,)=>{\n\t\tsetSelectedTodo(id);\n\t}\n\t\n\n\treturn(\n\t\t<>\n\t\t\t<center><h1>Todo List</h1></center>\n\t\t\t<div style={{'display': 'flex'}}>\n\t\t\t\t<div style={{'display': 'flex', 'flexDirection': 'column'}}>\n\t\t\t\t\t<div style={{'display': 'inline','padding': '1em'}} >\n\t\t\t\t\t  <TextField \n\t\t\t\t\t  \tstyle= {{ 'marginRight': '1em', 'boxShadow': '0 1px 6px rgba(32,33,36,.28)' }}\n\t\t\t\t\t  \tid=\"outlined-basic\" \n\t\t\t\t\t  \tlabel=\"Enter Name of list\"\n\t\t\t\t\t  \tvalue = {input} \n\t\t\t\t\t  \tvariant=\"outlined\"\n\t\t\t\t\t  \tsize=\"small\"\n\t\t\t\t\t  \tonChange = {(event)=>setInput(event.target.value)}\n\t\t\t\t\t  \t/>\n\t\t\t\t\t  <Button style= {{ }} variant=\"contained\" onClick={onAdd}>{(!isEdit) ? 'Add' : 'Update'}</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{'padding': '1em'}}>\n\t\t\t\t\t\t<TableContainer sx={{ maxWidth: '25em','boxShadow': '0 1px 15px rgba(32,33,36,.28)'}} component={Paper}>\n\t\t\t\t\t\t<Table  aria-label=\"customized table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t  <TableRow >\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Name</StyledTableCell>\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Edit</StyledTableCell>\n\t\t\t\t\t\t    <StyledTableCell align=\"right\">Delete</StyledTableCell>\n\t\t\t\t\t\t  </TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t  {(!!rows && rows.length) && rows.map((row) => (\n\t\t\t\t\t\t    <StyledTableRow style={{'cursor': 'pointer'}} key={row.id} onClick={()=>showTodos(row.id)}>\n\t\t\t\t\t\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{row.Name}\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.editButton}</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell align=\"right\">{row.deleteButton}</StyledTableCell>\n\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t  ))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\t(!!selectedTodo) &&\n\t\t\t\t\t<div style={{'flex':'1', 'display': 'flex', 'flexDirection': 'column'}}>\n\t\t\t\t\t\t<div style={{'display': 'inline','padding': '1em'}} >\n\t\t\t\t\t\t\t<Todos list = { lists.filter(list=> list._id === selectedTodo)[0] }/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default TodoList;\n","import TodoList from './TodoList/TodoList';\n\nfunction App() {\n\n  return (\n    <>\n      <TodoList />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types';\n\n\nconst initialState = {\n\tlists: [],\n}\n\n\nexport default function lists(state = initialState, action){\n\tswitch (action.type){\n\t\tcase type.GET_LISTS_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload\n\t\t\t}\n\t\tcase type.POST_LIST_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload,\n\t\t\t}\n\t\tcase type.PUT_LIST_SUCCESS:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: action.payload.data,\n\t\t\t}\n\t\tcase type.DELETE_LIST_SUCCESS:\n\t\treturn{\n\t\t\t...state,\n\t\t\tlists: action.payload\n\t\t}\n\t\tcase type.POST_TODO_SUCCESS:\n\t\t\tlet newList = state.lists.filter(list=> list._id !== action.payload.data._id);\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists: [...newList, action.payload.data ]\n\t\t\t}\n\t\tcase type.PUT_TODO_SUCCESS:\n\t\t\tlet index = null;\n\t\t\tlet tempNewlist = state.lists.filter((list,i)=> {\n\t\t\t\tif(list._id === action.payload._id){\n\t\t\t\t\tindex = i;\n\t\t\t\t\treturn list;\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst {lists} = state;\n\t\t\tlists[index] = action.payload;\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tlists\n\t\t\t}\n\t\tcase type.DELETE_TODO_SUCCESS:\n\t\t\tlet tempList = state.lists;\n\t\t\tlet listToUpdate = tempList.filter(list=> list._id === action.payload._id)[0];\n\t\t\tlet tempIndex = tempList.indexOf(listToUpdate);\n\t\t\ttempList[tempIndex] = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlists: [...tempList]\n\t\t\t}\n\t\tcase type.CHANGE_STATUS_SUCCESS:\n\t\t\tconst listId = action.payload._id;\n\t\t\tlet temp = state.lists.filter(list => list._id === listId)[0];\n\t\t\tlet oldList = state.lists.filter(list => list._id !== listId);\n\t\t\ttemp.todos = [...action.payload.todos];\n\t\t\tstate.lists = [...oldList, temp];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t}\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}","import {combineReducers} from 'redux';\nimport lists from './lists';\n\nconst rootReducer = combineReducers({\n\tlists: lists,\n});\n\nexport default rootReducer;","import {call,put,takeEvery,takeLatest} from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\n\nfunction getApi(){\n\treturn axios.get('http://localhost:3001/lists')\n\t\t.then(resp=> resp)\n\t\t.catch((e) => e)\n}\n\n\nfunction* fetchLists(action){\n\ttry{\n\t\tconst lists = yield call(getApi);\n\t\tyield put({type: types.GET_LISTS_SUCCESS, payload: lists.data.data.listData})\n\t}catch(e){\n\t\tyield put({type: types.GET_LISTS_FAILURE, payload: e.message})\n\t}\n}\n\n\nfunction* postApi(action){\n\ttry{\n\t\tlet newList = yield axios.post('http://localhost:3001/lists',action.payload);\n\t\tyield put({type: types.POST_LIST_SUCCESS, payload: newList.data})\n\t}catch(e){\n\t\tyield put({type: types.POST_LIST_FAILURE, payload: e.message})\t\n\t}\n}\n\nfunction* editList(action){\n\ttry{\n\t\tlet newList = yield axios.put(`http://localhost:3001/lists/${action.payload.id}`,action.payload.data);\n\t\tyield put({type: types.PUT_LIST_SUCCESS, payload: newList.data})\n\t}catch(e){\n\t\tyield put({type: types.PUT_LIST_FAILURE, payload: e.message})\t\n\t}\n}\n\nfunction* deleteList(action){\n\ttry{\n\t\tlet newList = yield axios.delete(`http://localhost:3001/lists/delete/${action.payload}`)\n\t\tyield put({type: types.DELETE_LIST_SUCCESS, payload: newList.data.data})\n\t}catch(e){\n\t\tyield put({type: types.DELETE_LIST_FAILURE, payload: e.message})\n\t}\n}\n\nfunction* listSaga(){\n\tyield takeLatest(types.GET_LISTS_REQUEST,fetchLists);\n\tyield takeEvery(types.POST_LIST_REQUEST, postApi);\n\tyield takeEvery(types.PUT_LIST_REQUEST, editList);\n\tyield takeEvery(types.DELETE_LIST_REQUEST, deleteList)\n}\n\nexport default listSaga;\n","import {put,takeEvery} from 'redux-saga/effects';\nimport * as types from '../types';\nimport axios from 'axios';\n\n\nfunction* postTodo(action){\n\ttry{\n\t\tlet newTodos = yield axios.post(`http://localhost:3001/list/todo/${action.payload.id}`,action.payload.data);\n\t\tyield put({type: types.POST_TODO_SUCCESS, payload: newTodos})\n\t}catch(e){\n\t\tyield put({type: types.POST_TODO_FAILURE, payload: e.message})\t\n\t}\n}\n\nfunction* editTodo(action){\n\ttry{\n\t\tlet newTodo = yield axios.put(`http://localhost:3001/list/todo/${action.payload.id}`,action.payload.data);\n\t\tyield put({type: types.PUT_TODO_SUCCESS, payload: newTodo.data})\n\t}catch(e){\n\t\tyield put({type: types.PUT_TODO_FAILURE, payload: e})\t\n\t}\n}\n\nfunction* deleteTodo(action){\n\tconst {listId, id} = action.payload;\n\ttry{\n\t\tlet newTodo = yield axios.put(`http://localhost:3001/list/todo/delete/${listId}`, {id: id});\n\t\tyield put({type: types.DELETE_TODO_SUCCESS, payload: newTodo.data})\n\t}catch(e){\n\t\tyield put({type: types.DELETE_TODO_FAILURE, payload: e})\n\t}\n}\n\nfunction* changeStatus(action){\n\ttry{\n\t\tlet newTodo = yield axios.put(`http://localhost:3001/list/todo/changeStatus/${action.payload.listId}`,action.payload);\n\t\tyield put({type: types.CHANGE_STATUS_SUCCESS, payload: newTodo.data})\n\t}catch(e){\n\t\tyield put({type: types.CHANGE_STATUS_FAILURE, payload: e})\t\n\t}\n}\n\n\nfunction* todoSaga(){\n\tyield takeEvery(types.POST_TODO_REQUEST, postTodo);\n\tyield takeEvery(types.PUT_TODO_REQUEST, editTodo);\n\tyield takeEvery(types.DELETE_TODO_REQUEST, deleteTodo);\n\tyield takeEvery(types.CHANGE_STATUS_REQUEST, changeStatus);\n}\n\nexport default todoSaga;","import {all} from 'redux-saga/effects';\nimport listSaga from './listSaga';\nimport todoSaga from './todoSaga';\n\n\nexport default function* rootSaga(){\n\tyield all([\n\t\tlistSaga(),\n\t\ttodoSaga(),\n\t])\n}","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './reducers/index.js';\nimport rootSaga from './sagas/index';\nimport createSagaMiddleware from 'redux-saga';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = compose(\n\tapplyMiddleware(sagaMiddleware),\n)(createStore)(rootReducer);\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>\t\n\t</React.StrictMode>,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}